import java.util.Arrays;

public class fill {
    public static void main(String[] args) {

        System.out.println(Arrays.toString(fill(new int[]{1,2,3,5, 9, 12, -2,-1}, 3, 10)));
        System.out.println(Arrays.toString(fill(new int[]{4, 2, -3, 12}, 1, 5)));
        System.out.println(Arrays.toString(fill(new int[]{2, 6, 9, 0, -3}, 0, 4)));
    }
    public static int[ ] fill(int[ ] arr, int k, int n) {
        if (k == 0){
            return null;
        }
        int [] b = new int[n];
        int x = 0;
        boolean is = false;
        while (true) {
            for (int i = 0; i < k; i++) {
                b[x] =arr[i];
                x++;
                n--;
                if (n == 0){
                    is = true;
                    break;
                }
            }
            if (is){
                break;
            }
        }
        return b;
    }
}
/*
************************ simplest way ***********************
static int[] fill(int[] arr, int k, int n){
        if (k ==0 || n == 0){
            return null;
        }
        int [] r = new int[n];
        int x = 0;
        int counter = 0;
        while (counter < n){
            for (int i=0; i<k; i++){
                counter++;
                r[x] = arr[i];
                x++;
            }
            if (counter == n){
                break;
            }
        }
        return r;
    }
 */
/*
**********************************************************************
static int[] fill(int[] arr, int k, int n) {
        if (k <= 0 || n <= 0)
            return null;

        int[] arr2 = new int[n];

        for (int i = 0; i < n; ) {
            for (int j = 0; j < k && i < n; j++) {
                arr2[i] = arr[j];
                i++;
            }
        }
        return arr2;
 */
